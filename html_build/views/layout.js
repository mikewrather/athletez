define(["facade","views/base","utils"],function(e,t,n){var r,i=e.$,s=e._,o=n.lib,u=e.Backbone,a=o.Channel,f=n.debug,l=Array.prototype.slice;return f=n.debug,r=t.extend({scheme:null,schemeViewNames:null,initialize:function(e,t){e&&this.setOptions(e),t&&t.route&&this.addController(t)},addController:function(e){e.layout||(e.layout=this),e.data&&this.handleStateData(e.data),this.controller||(this.controller=e),s.each(this.schemeViewNames,function(t){t&&s.isString(t)&&s.isFunction(e.addStateChangeSubscriber)&&e.addStateChangeSubscriber(t)})},setOptions:function(e){var n;t.prototype.setOptions.apply(this,l.call(arguments));if(!this.template&&!s.isString(this.template)&&!this.destination)throw n="LayoutView expected template and destination options for initialization.",new Error(n);this.setSchemeOption(e),this.setDisplayWhenOption(e),this.setTransitionMethodOption(e)},setSchemeOption:function(e){var t,n;if(!e.scheme&&!s.isArray(e.scheme))throw t="LayoutView expected a scheme array for initialization.",new Error(t);this.scheme=e.scheme,n=[],s.each(this.scheme,function(e){n.push(e.name)}),this.schemeViewNames=n,i(this.destination).html(this.template)},setDisplayWhenOption:function(e){if(e.displayWhen){if(e.displayWhen!=="ready"&&e.displayWhen!=="resolved")throw msg="LayoutView option for displayWhen value must be 'resolved' or 'ready'",new Error(msg)}else e.displayWhen="resolved";f.log("LayoutView setDisplayWhenOption: "+e.displayWhen)},setTransitionMethodOption:function(e){var t;if(e.transitionMethod){if(e.transitionMethod!=="showHide")throw t="LayoutView option for transitionMethod is not valid, expected 'showHide'.",new Error(t)}else e.transitionMethod="showHide"},section:function(e){var t=s.find(this.scheme,function(t){return t.name===e});return t},render:function(e){var t=this.options;console.log("--------------->>>>   "+t.displayWhen),t.displayWhen&&(t.displayWhen==="ready"?this.displayWhenReady(e):t.displayWhen==="resolved"&&this.displayWhenResolved(e))},displayViews:function(){var e=this.scheme,t=this;s.each(e,function(e){t.section(e.name).display(!0)})},displayWhenResolved:function(e){var t=this,n=[];s.each(this.scheme,function(e){var t;if(!e.deferred)throw t="LayoutView displayWhenResolved expected ",t+=e.name,t+=" view to have a deferred property",new Error(t);n.push(e.deferred)}),i.when.apply(i,n).then(function(){t.displayViews(),e&&s.isFunction(e)&&e(),a("layout:ready").publish()},function(){var t;throw t="LayoutView render could not complete all of the scheme's views.",new Error(t)})},displayWhenReady:function(e){var t=this.scheme,n=this;t.length&&s.each(t,function(e){var t=n.section(e.name);t.isRendered()?t.display(!0):t.isNotRendered()&&(t.render.call(t),t.deferred.done(function(){t.display(!0)}))}),e&&s.isFunction(e)&&e()},transition:function(e,t){var n;if(!!s.contains(this.schemeViewNames,e)){if(!t||t&&(!t.state||!t.display))throw n="LayoutView transition for "+e,n+=" requires a SectionView with methods for state and display",new Error(n);this.section(e).display(!1),t.isNotRendered()?(t.render(),t.deferred.done(function(){t.display(!0)})):t.display(!0)}},clearLayoutScheme:function(){var e;for(var e in this.scheme)typeof this.scheme=="object"&&(this.scheme[e].destroy(),delete this.scheme[e]);this.scheme=null,this.schemeViewNames=null},remove:function(){this.clearLayoutScheme(),t.prototype.remove.call(this)},state:function(e,t){var n=this,r,i;return n.meta||(n.meta={}),e?s.isObject(e)&&s.each(e,function(e,i){if(s.contains(n.schemeViewNames,i)){r=n.section(i);try{r.state(e.state,t,r)}catch(o){f.log(o)}}else n.meta[i]=e}):(n.controller&&n.controller.route?i=n.controller.route:i=window.location.pathname,e={route:i},n.controller&&(e.meta=n.controller.meta),s.each(n.scheme,function(t){e[t.name]={state:t.state(),meta:t.meta()}})),e},displayChangeHandler:function(e,t){var n,r;if(!e||!t||e===t)throw new Error("SectionView stateChangeHandler expected lastState and state arguemnts to be different");if(e==="not-displayed"||e==="displayed"){if(t==="not-displayed"||t==="displayed")n=t.indexOf("not-",0)!==0,this.display(n)}else e==="not-rendered"&&(this.render(),t==="displayed"?this.display(!0):t==="not-displayed"&&this.display(!1))},handleStateData:function(e){var t=this;s.each(e,function(e,n,r){s.each(t.schemeViewNames,function(r,i,s){var o={};r===n&&(o[n]=e,t.state(o,t.displayChangeHandler))})})}}),r});