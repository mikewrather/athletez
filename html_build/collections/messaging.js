define(["models","collections/base","utils","facade"],function(e,t,n,r){var i,s=e.MessagingModel,o=n.lib.Channel,u=n.debug,a=r._;return i=t.extend({model:s,initialize:function(){a.bindAll(this),this.addSubscribers()},add:function(e,n){var r,i=!1;a.isArray(e)?i=!0:this.length>0?(r=this.filter(function(e){return e.get("state")==="done"}),r&&r.length&&(e.message===this.at(r.length-1).get("message")&&u.log("duplicate msg"),this.remove(r),i=!0)):i=!0,i&&t.prototype.add.call(this,e,n)},addSubscribers:function(){o("messaging:status","nomemory").subscribe(this.setStatus)},removeSubscribers:function(){o("messaging:status").unsubscribe(this.setStatus)},setStatus:function(e){this.add(e)}}),i});