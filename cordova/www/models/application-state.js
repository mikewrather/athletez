define(["facade","utils","syncs"],function(e,t,n){var r,i=e.Backbone,s=e._,o=t.storage,u=n.applicationStateSync,a=t.debug;return r=i.Model.extend({defaults:{name:null,data:null,storage:"sessionStorage"},initialize:function(e,t){a.log("ApplicationState initialize"),this.storage=new o(e.name,e.storage),this.sync=u,this.id=this.id||this.cid;var n=new Date(Date.now()+42e4);this.set("expires",n)},isExpired:function(){var e=this.get("expires"),t=(new Date(e)).valueOf()<Date.now().valueOf();return t},validate:function(e){function r(e){s.isString(e)&&n.push(e)}var t,n=[];r(this.validateNameProperty(e)),r(this.validateStorageProperty(e));if(n.length)return t="ApplicationStateModel failed validation: ",t+=n.join(" AND "),a.log(t),t},validateStorageProperty:function(e){var t,n=["localStorage","sessionStorage","cookie"],r=s.isArray(e)?e[0].storage:e.storage;if(!r||!s.contains(n,r))t="Only localStorage, sessionStorage, or cookie",t+=" are allowed as storage properties.";return t},validateNameProperty:function(e){var t,n=s.isArray(e)?e[0].name:e.name;if(!n||!s.isString(n))t="Name property is not a string";return t}}),r});